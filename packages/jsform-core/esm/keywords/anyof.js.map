{"version":3,"sources":["../../src/keywords/anyof.ts"],"names":["resolve","getSchemaId","isArray","anyOf","$id","schema","map","schemaOfOne","$ref","undefined"],"mappings":"AAEA,SAASA,OAAT,EAAkBC,WAAlB,QAAqC,iBAArC;AACA,SAASC,OAAT,QAAwB,UAAxB;AAEA;;;;;;;;AAOA,IAAMC,KAAK,GAAG,eAACC,GAAD,EAAcC,MAAd,EAAmD;AAAA,MACrDF,KADqD,GAC3CE,MAD2C,CACrDF,KADqD;;AAG7D,MAAIA,KAAK,IAAID,OAAO,CAACC,KAAD,CAApB,EAA6B;AACzBE,IAAAA,MAAM,CAACF,KAAP,GAAeA,KAAK,CAACG,GAAN,CAAU,UAACC,WAAD,EAAwC;AAC7D,aAAOP,OAAO,CAACO,WAAD,EAA6BF,MAAM,CAACD,GAAP,IAAcH,WAAW,CAACI,MAAM,CAACG,IAAP,IAAe,EAAhB,CAAzB,GAA+CC,SAA/C,GAA2DR,WAAW,CAACG,GAAD,CAAnG,CAAd;AACH,KAFc,CAAf;AAGH;;AAED,SAAOC,MAAP;AACH,CAVD;;AAYA,eAAeF,KAAf","sourcesContent":["import { JSONSchema6, JSONSchema6Definition } from \"json-schema\";\n\nimport { resolve, getSchemaId } from \"../libs/resolve\";\nimport { isArray } from \"../utils\";\n\n/**\n * 解析schema中的关键字 oneOf\n * 如果发现有oneOf关键字，遍历替换成schema\n * @param  {string}      $id    当前的schema的ID\n * @param  {JSONSchema6} schema 当前的schema\n * @return {JSONSchema6}        处理过后的schema\n */\nconst anyOf = ($id: string, schema: JSONSchema6): JSONSchema6 => {\n    const { anyOf } = schema;\n\n    if (anyOf && isArray(anyOf)) {\n        schema.anyOf = anyOf.map((schemaOfOne: JSONSchema6Definition) => {\n            return resolve(schemaOfOne as JSONSchema6, schema.$id || getSchemaId(schema.$ref || \"\") ? undefined : getSchemaId($id));\n        });\n    }\n\n    return schema;\n};\n\nexport default anyOf;"],"file":"anyof.js"}