{"version":3,"sources":["../../src/keywords/oneof.ts"],"names":["resolve","isArray","_$id","schema","oneOf","map","schemaOfOne"],"mappings":"AAEA,SAASA,OAAT,QAAwB,iBAAxB;AACA,SAASC,OAAT,QAAwB,UAAxB;AAEA;;;;;;;;AAOA,gBAAe,UAACC,IAAD,EAAeC,MAAf,EAAoD;AAC/D,MAAMC,KAAK,GAAGD,MAAM,CAACC,KAArB;;AAEA,MAAIA,KAAK,IAAIH,OAAO,CAACG,KAAD,CAApB,EAA6B;AACzBD,IAAAA,MAAM,CAACC,KAAP,GAAeA,KAAK,CAACC,GAAN,CAAU,UAACC,WAAD,EAAwC;AAC7D,aAAON,OAAO,CAACM,WAAD,CAAd;AACH,KAFc,CAAf;AAGH;;AAED,SAAOH,MAAP;AACH,CAVD","sourcesContent":["import { JSONSchema6, JSONSchema6Definition } from \"json-schema\";\n\nimport { resolve } from \"../libs/resolve\";\nimport { isArray } from \"../utils\";\n\n/**\n * 解析schema中的关键字 oneOf\n * 如果发现有oneOf关键字，遍历替换成schema\n * @param  {string}      $id    当前的schema的ID\n * @param  {JSONSchema6} schema 当前的schema\n * @return {JSONSchema6}        处理过后的schema\n */\nexport default (_$id: string, schema: JSONSchema6): JSONSchema6 => {\n    const oneOf = schema.oneOf;\n\n    if (oneOf && isArray(oneOf)) {\n        schema.oneOf = oneOf.map((schemaOfOne: JSONSchema6Definition) => {\n            return resolve(schemaOfOne as JSONSchema6);\n        });\n    }\n\n    return schema;\n};\n"],"file":"oneof.js"}