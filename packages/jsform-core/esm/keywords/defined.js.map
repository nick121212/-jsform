{"version":3,"sources":["../../src/keywords/defined.ts"],"names":["resolve","isBoolean","defined","_$id","schema","definitions","key","hasOwnProperty","element","$id"],"mappings":"AAEA,SAASA,OAAT,QAAwB,iBAAxB;AACA,SAASC,SAAT,QAA0B,UAA1B;AAEA;;;;;;;;AAOA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,IAAD,EAAeC,MAAf,EAAoD;AAChE,MAAMC,WAAW,GAAGD,MAAM,CAACC,WAA3B;;AAEA,MAAI,CAACA,WAAL,EAAkB;AACd,WAAOD,MAAP;AACH;;AAED,OAAK,IAAME,GAAX,IAAkBD,WAAlB,EAA+B;AAC3B,QAAIA,WAAW,CAACE,cAAZ,CAA2BD,GAA3B,CAAJ,EAAqC;AACjC,UAAME,OAA8B,GAAGH,WAAW,CAACC,GAAD,CAAlD;;AAEA,UAAI,CAACL,SAAS,CAACO,OAAD,CAAd,EAAyB;AACrBR,QAAAA,OAAO,CAACQ,OAAD,YAA4BJ,MAAM,CAACK,GAAnC,2BAAuDH,GAAvD,EAAP;AACH;AACJ;AACJ;;AAED,SAAOF,MAAP;AACH,CAlBD;;AAoBA,eAAeF,OAAf","sourcesContent":["import { JSONSchema6 } from \"json-schema\";\n\nimport { resolve } from \"../libs/resolve\";\nimport { isBoolean } from \"../utils\";\n\n/**\n * 解析schema中的关键字 definitions\n * 如果发现有definitions关键字，解析schema\n * @param  {string}      $id    当前的schema的ID\n * @param  {JSONSchema6} schema 当前的schema\n * @return {JSONSchema6}        处理过后的schema\n */\nconst defined = (_$id: string, schema: JSONSchema6): JSONSchema6 => {\n    const definitions = schema.definitions;\n\n    if (!definitions) {\n        return schema;\n    }\n\n    for (const key in definitions) {\n        if (definitions.hasOwnProperty(key)) {\n            const element: JSONSchema6 | boolean = definitions[key];\n\n            if (!isBoolean(element)) {\n                resolve(element as JSONSchema6, `${schema.$id}#/definitions/${key}`);\n            }\n        }\n    }\n\n    return schema;\n};\n\nexport default defined;"],"file":"defined.js"}