{"version":3,"sources":["../../src/utils/index.ts"],"names":["hasOwnProperty","Object","prototype","toString","typeOf","value","type","typeString","call","undefined","nodeType","test","nodeValue","isNumber","n","isString","isArray","isBoolean","mergeKeys","originKeys","indexList","arrayLevelCopy","keys","reverse","map","key","index","pop"],"mappings":";;;;;;;;;;;;;;AAAA;;;AAGA,OAAO,IAAMA,cAAc,GAAGC,MAAM,CAACC,SAAP,CAAiBF,cAAxC;AAEP;;;;AAGA,OAAO,IAAMG,QAAQ,GAAGF,MAAM,CAACC,SAAP,CAAiBC,QAAlC;AAEP,OAAO,SAASC,MAAT,CAAgBC,KAAhB,EAA4B;AAClC,MAAI,SAASA,KAAb,EAAoB;AACnB,WAAO,MAAP;AACA;;AAED,MAAIC,IAAI,WAAUD,KAAV,CAAR;;AAEA,MAAI,gBAAgBC,IAAhB,IAAwB,aAAaA,IAAzC,EAA+C;AAC9C,WAAOA,IAAP;AACA;;AAED,MAAIC,UAAU,GAAGJ,QAAQ,CAACK,IAAT,CAAcH,KAAd,CAAjB;;AACA,UAAQE,UAAR;AACC,SAAK,gBAAL;AACC,aAAO,OAAP;;AACD,SAAK,eAAL;AACC,aAAO,MAAP;;AACD,SAAK,kBAAL;AACC,aAAO,SAAP;;AACD,SAAK,iBAAL;AACC,aAAO,QAAP;;AACD,SAAK,mBAAL;AACC,aAAO,UAAP;;AACD,SAAK,iBAAL;AACC,aAAO,QAAP;;AACD,SAAK,iBAAL;AACC,UAAIE,SAAS,KAAKJ,KAAK,CAACK,QAAxB,EAAkC;AACjC,YAAI,MAAML,KAAK,CAACK,QAAhB,EAA0B;AACzB,iBAAO,KAAKC,IAAL,CAAUN,KAAK,CAACO,SAAhB,IAA6B,UAA7B,GAA0C,YAAjD;AACA,SAFD,MAEO;AACN,iBAAO,SAAP;AACA;AACD,OAND,MAMO;AACN,eAAO,QAAP;AACA;;AACF;AACC,aAAO,QAAP;AAxBF;AA0BA;AAED;;;;;;AAKA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,CAAD,EAAqB;AAC5C,SAAOV,MAAM,CAACU,CAAD,CAAN,KAAc,QAArB;AACA,CAFM;AAIP;;;;;;AAKA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACD,CAAD,EAAqB;AAC5C,SAAOV,MAAM,CAACU,CAAD,CAAN,KAAc,QAArB;AACA,CAFM;AAIP;;;;;;AAKA,OAAO,IAAME,OAAO,GAAG,SAAVA,OAAU,CAACF,CAAD,EAAqB;AAC3C,SAAOV,MAAM,CAACU,CAAD,CAAN,KAAc,OAArB;AACA,CAFM;AAIP;;;;;;AAKA,OAAO,IAAMG,SAAS,GAAG,SAAZA,SAAY,CAACH,CAAD,EAAqB;AAC7C,SAAOV,MAAM,CAACU,CAAD,CAAN,KAAc,SAArB;AACA,CAFM;AAIP;;;;;;;;AAOA,OAAO,IAAMI,SAAS,GAAG,SAAZA,SAAY,CAACC,UAAD,EAA8D;AAAA,MAAvCC,SAAuC,uEAAjB,EAAiB;;AACtF,MAAMC,cAAc,sBAAOD,SAAP,CAApB;;AACA,MAAME,IAAI,GAAGH,UAAU,CAACI,OAAX,GAAqBC,GAArB,CAAyB,UAACC,GAAD,EAAiB;AACtD,QAAIA,GAAG,KAAK,GAAZ,EAAiB;AAChB,UAAMC,KAAK,GAAGL,cAAc,CAACM,GAAf,EAAd;AAEA,aAAO,CAAC,OAAOD,KAAP,KAAiB,WAAjB,GAA+B,EAA/B,GAAoCA,KAArC,EAA4CvB,QAA5C,EAAP;AACA;;AAED,WAAOsB,GAAP;AACA,GARY,CAAb;AAUA,SAAOH,IAAI,CAACC,OAAL,EAAP;AACA,CAbM","sourcesContent":["/**\n * 暴露hasOwnProperty方法\n */\nexport const hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * 暴露toString方法\n */\nexport const toString = Object.prototype.toString;\n\nexport function typeOf(value: any) {\n\tif (null === value) {\n\t\treturn \"null\";\n\t}\n\n\tlet type = typeof value;\n\n\tif (\"undefined\" === type || \"string\" === type) {\n\t\treturn type;\n\t}\n\n\tlet typeString = toString.call(value);\n\tswitch (typeString) {\n\t\tcase \"[object Array]\":\n\t\t\treturn \"array\";\n\t\tcase \"[object Date]\":\n\t\t\treturn \"date\";\n\t\tcase \"[object Boolean]\":\n\t\t\treturn \"boolean\";\n\t\tcase \"[object Number]\":\n\t\t\treturn \"number\";\n\t\tcase \"[object Function]\":\n\t\t\treturn \"function\";\n\t\tcase \"[object RegExp]\":\n\t\t\treturn \"regexp\";\n\t\tcase \"[object Object]\":\n\t\t\tif (undefined !== value.nodeType) {\n\t\t\t\tif (3 === value.nodeType) {\n\t\t\t\t\treturn /\\S/.test(value.nodeValue) ? \"textnode\" : \"whitespace\";\n\t\t\t\t} else {\n\t\t\t\t\treturn \"element\";\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn \"object\";\n\t\t\t}\n\t\tdefault:\n\t\t\treturn \"unknow\";\n\t}\n}\n\n/**\n * 判断参数是不是数字\n * @param   {Any}      n    需要验证的参数\n * @returns {Boolean}\n */\nexport const isNumber = (n: any): boolean => {\n\treturn typeOf(n) === \"number\";\n};\n\n/**\n * 判断参数是不是字符串\n * @param   {Any}      n    需要验证的参数\n * @returns {Boolean}\n */\nexport const isString = (n: any): boolean => {\n\treturn typeOf(n) === \"string\";\n};\n\n/**\n * 判断参数是不是boolean\n * @param   {Any}      n    需要验证的参数\n * @returns {Boolean}\n */\nexport const isArray = (n: any): boolean => {\n\treturn typeOf(n) === \"array\";\n};\n\n/**\n * 判断参数是不是boolean\n * @param   {Any}      n    需要验证的参数\n * @returns {Boolean}\n */\nexport const isBoolean = (n: any): boolean => {\n\treturn typeOf(n) === \"boolean\";\n};\n\n/**\n * 解析keys\n * 1. 遍历keys中的元素，如果遇到-，则替换成数字\n * @param   {string[]} originKeys 需要做替换的数据路径\n * @param   {string[]} indexList  当前传递过来的indexList\n * @returns {string[]}\n */\nexport const mergeKeys = (originKeys: string[], indexList: number[] = []): string[] => {\n\tconst arrayLevelCopy = [...indexList];\n\tconst keys = originKeys.reverse().map((key: string) => {\n\t\tif (key === \"-\") {\n\t\t\tconst index = arrayLevelCopy.pop();\n\n\t\t\treturn (typeof index === \"undefined\" ? \"\" : index).toString();\n\t\t}\n\n\t\treturn key;\n\t});\n\n\treturn keys.reverse();\n};\n"],"file":"index.js"}